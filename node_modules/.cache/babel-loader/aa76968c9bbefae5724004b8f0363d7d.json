{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Portfolio\\\\src\\\\contexts\\\\theme.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [themeName, setThemeName] = useState('light');\n  useEffect(() => {\n    const isDark = localStorage.getItem('themeName') === 'dark';\n    if (isDark) setThemeName('dark');\n  }, []);\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark';\n    localStorage.setItem('themeName', name);\n    setThemeName(name);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: [{\n      themeName,\n      toggleTheme\n    }],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"SuRQqTvpA2I4PIgWuFEVm/A8+ME=\");\n_c = ThemeProvider;\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { ThemeProvider, ThemeContext };\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","PropTypes","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","themeName","setThemeName","isDark","localStorage","getItem","toggleTheme","name","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","$RefreshReg$"],"sources":["C:/Development/Portfolio/src/contexts/theme.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const isDark = localStorage.getItem('themeName') === 'dark'\r\n    if (isDark) setThemeName('dark')\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,KAAK,MAAM;IAC3D,IAAIF,MAAM,EAAED,YAAY,CAAC,MAAM,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,IAAI,GAAGN,SAAS,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM;IACpDG,YAAY,CAACI,OAAO,CAAC,WAAW,EAAED,IAAI,CAAC;IACvCL,YAAY,CAACK,IAAI,CAAC;EACpB,CAAC;EAED,oBACEX,OAAA,CAACC,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAE,CAAC;MAAET,SAAS;MAAEK;IAAY,CAAC,CAAE;IAAAP,QAAA,EACxDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAAd,EAAA,CAnBKF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAqBnBA,aAAa,CAACkB,SAAS,GAAG;EACxBjB,QAAQ,EAAEL,SAAS,CAACuB,IAAI,CAACC;AAC3B,CAAC;AAED,SAASpB,aAAa,EAAED,YAAY;AAAE,IAAAkB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}